<a:Api>
    <Copyright>
        Copyright 1996-2008 Ariba, Inc.

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

        $Id: //ariba/platform/ui/aribaweb/ariba/ui/aribaweb/html/AWPasswordField.awl#26 $
    </Copyright>

    <Overview>
        TBD
    </Overview>

    <Binding key="value" direction="both" type="String" required="$true">
        The value of the password field.
    </Binding>

    <Binding key="name" direction="get" type="String" required="$false">
        Optional name for input field.  If this value is not provided, then an
        elementId will be automatically generated.
    </Binding>

    <Binding key="formatter" direction="get" type="String" required="$false">
        Optional object which implements the AWFormatting class extension.  If available
        this is used to parse the value during applyValues.
    </Binding>

    <Binding key="isRefresh" direction="get" type="String" default="$false">
        If set to true, then the onChange event will cause the form containing this
        field to be sumbmitted.
    </Binding>

    <Binding key="errorKey" type="Object" direction="get" required="$false">
        If you have a formatter binding, then the String value typed in by the user will be parsed
        through that formatter.  Should a parse exception occur, this error key will be used to record the
        error, along with the errantValue, into the AWErrorManager on the AWPage.  If you do
        not provide an errorKey, the elementId of this textfield will be used.
    </Binding>

    <Binding key="onKeyDown" direction="get" type="String">
        Do not use this binding.  This is documented here to prevent onKeyDown
        from being available in "otherBindings".
    </Binding>

    <Binding key="class" direction="get" type="String">
        CSS class.  By default uses "tf tfW"
    </Binding>

    <Binding key="size" direction="get" type="int">
        INPUT size attribute.
    </Binding>

    <Binding key="placeholder" type="Object" required="$false" direction="get">
        Placeholder text displayed to the user when value is null, empty or equals to emptyStringValue.
        Placeholder does not get push to the parent component.
    </Binding>

    <Example name="Basic Use">
        <a:PasswordField/>
    </Example>
    
</a:Api>\

<div class="dialogWrapper" style="position:absolute;display:none;background:#FFEAAA" elementId="$warnId" id="$warnId">\
    <table width="300px">\
        <tr>\
            <td valign="top">\
                <a:Image filename="warning.gif"
                    alt="$[a001]Warning" title="$[a001]Warning"/>\
            </td>\
            <td>\
                <a:Local key="a002">\
                    Warning: Caps Lock is on.  This may cause you to enter your password incorrectly.\
                </a:Local>\
            </td>\
        </tr>\
    </table>\
</div>
<a:RefreshRegion bh="PF" class="$pfcClass">
    <a:If ifTrue="$displayPlaceholder">
        <label class="ph">$placeholder</label>
    </a:If>
    <a:If ifTrue="$hasForm">
        <input type="password" name="$inputName" value="$formattedString"
            id="$env.awinputId:$inputName" onKeyDown="$onKeyDownString"
            formValue="$formValue"
            class="$cssClass" size="$^size"
            onKeyPress="$onKeyPressString"
            onCopy="return false" 
            otherBindings="$otherBindingsValues"
            onFOcus="$onFocus"
            onBLur="$onBlur"
            autocomplete="off"/>\
        <input type="hidden" name="$=ariba.ui.aribaweb.core.AWBaseRequest.AWLogFilterListKey" value="$inputName"/>
    <a:Else/>
        <input type="password" name="$inputName" value="$^value"
            id="$^id:$inputName"
            onKeyDown="$checkCapsLockFunction"
            onKeyPress="$onKeyPressString"
            onCopy="return false" 
            otherBindings="$otherBindingsValues"
            autocomplete="off"/>\
        <input type="hidden" name="$=ariba.ui.aribaweb.core.AWBaseRequest.AWLogFilterListKey" value="$inputName"/>
    </a:If>
</a:RefreshRegion>
