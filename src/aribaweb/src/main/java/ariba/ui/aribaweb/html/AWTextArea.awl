<a:Api>
    <Copyright>
        Copyright 1996-2008 Ariba, Inc.

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.

        $Id: //ariba/platform/ui/aribaweb/ariba/ui/aribaweb/html/AWTextArea.awl#31 $
    </Copyright>

    <Overview>
        Renders an HTML `<textarea ...>...</textarea>` tag on the page.
    </Overview>

    <Binding key="name" type="String" required="$false" direction="get">
        Sets the name of the `<input ...>...</input>` tag that implements the button by
        overriding the element id.
    </Binding>

    <Binding key="value" type="String" required="$true" direction="both">
        Determines the text that is displayed in the text area.
    </Binding>

    <Binding key="editable" type="boolean" direction="get" required="$false">
        Indicates whether the value is editable.  If the binding is not supplied,
        a value is taken from the page environment.
    </Binding>

    <Binding key="emptyStringValue" type="String" default="" direction="get">
        Determines the text that is displayed in the text area if there is no data from the user.
        This text is also returned in the value binding.
    </Binding>

    <Binding key="errorKey" type="Object" direction="get" required="$false">
        If you have a formatter binding, then the String value typed in by the user will be parsed
        through that formatter.  Should a parse exception occur, this error key will be used to record the
        error, along with the errantValue, into the AWErrorManager on the AWPage.  If you do
        not provide an errorKey, the elementId of this textfield will be used.
    </Binding>

    <Binding key="escapeHtml" type="boolean" default="$true" direction="get">
        Determines whether the HTML contained in the text area is escaped.
        Does not affect the way the text is actually displayed in the text area by the browser.
    </Binding>

    <Binding key="formatter" type="AWFormatting" default="$null" direction="get">
        The formatter to be used when both rendering the string into the HTML, and parsing the
        string from the request.  AWFormatting is a ClassExtension which covers java.text.Formatter,
        ariba.util.Formatter, etc.
    </Binding>

    <Binding key="isRefresh" type="boolean" default="$false" direction="get">
        Specifies that the form be submitted immediately when a change is made and the field
        loses focus (e.g. when the user tabs out).
    </Binding>

    <Binding key="maxLength" type="int" required="$false" direction="get">
        If provided, specifies the maximum length of the text displayed in the text area.
        Any amount greater will be truncated. If it is 0, there is no maxLength.
    </Binding>

    <Binding key="showMaxLength" type="boolean" required="$false" direction="get">
        Display the number of characters left if true and if maxLength is specified.
    </Binding>

    <Binding key="onChange" type="String" default="$null" direction="get" deprecated="$true">
        Not supported?
    </Binding>

    <Binding key="onKeyDown" direction="get" type="String" default="$false">
        Do not use this binding.  This is documented here to prevent onKeyDown
        from being available in "otherBindings".
    </Binding>

    <Binding key="placeholder" type="Object" required="$false" direction="get">
        Placeholder text displayed to the user when value is null or empty.
    </Binding>

    <Binding key="behavior" type="Object" required="$false" direction="get">
        For internal use: Allow for override of text field behavior.
    </Binding>
</a:Api>\
<a:If ifTrue="$isEditable">
    <a:If ifFalse="$showMaxLengthIndicator">\
        <a:IncludeBlock name="Input" escapeHtml="$^escapeHtml" awname="$^awname"/>\
    <a:Else/>\
        <table width="1%" cellspacing="0" cellpadding="0">\
            <tr>\
                <td>\
                    <a:IncludeBlock name="Input" escapeHtml="$^escapeHtml" awname="$^awname"/>\
                </td>\
            </tr>\
            <tr>\
                <td>
                    <div style="float:right;text-align:right;font-weight:bold;" id="$maxLengthIndicatorId">$maxLengthIndicatorString</div>\
                    <div style="float:right"><a:Local key="a001">Characters left</a:Local>:</div>\                    
                </td>
            </tr>\
        </table>\
    </a:If>\
    <a:RefreshRegion>\
        <a:If ifTrue="$isInHighLightedErrorScope">
            <a:ClientSideScript>\
                ariba.Input.setTextFocus('$textAreaId');\
            </a:ClientSideScript>\
        </a:If>
    </a:RefreshRegion>
<a:Else/>\
    <a:String value="$formattedString" escapeHtml="$^escapeHtml:$true"/>\
</a:If>\
<a:Block name="Input">
    <textarea name="$textAreaName" formValue="$formValue" elementId="$elementId"
              bh="$^behavior:TA" _mL="$maxLength" _isRF="$^isRefresh"
              _pl="$formatPlaceHolder" onBLur="$onBlurString" class="$cssClass"
              otherBindings="$otherBindingsValues" id="$textAreaId" disabled="$disabled"
              onpaste="$onPasteString">\
        <a:String value="$formattedString" escapeHtml="$^escapeHtml:$true"/>\
    </textarea>\
</a:Block>